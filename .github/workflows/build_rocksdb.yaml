name: Build RocksDB
on:
  push:
    paths:
      - '!.github/workflows/*'
      - .github/workflows/build_rocksdb.yaml
      - setup.py
      - src/*
      - tests/*

jobs:
  linux:
    runs-on: ubuntu-latest
    container:
      image: quay.io/pypa/${{ matrix.tag }}
    strategy:
      fail-fast: false
      matrix:
        tag: [manylinux2014_x86_64, musllinux_1_1_x86_64]
    steps:
      - name: Checkout RocksDB
        uses: actions/checkout@v3
        with:
          repository: facebook/rocksdb
          ref: v8.0.0

      - name: Build RocksDB
        run: |
          make rocksdbjavastatic_deps -j $(nproc)
          export CPATH=$CPATH:$(ls -d zlib-*/)
          export CPATH=$CPATH:$(ls -d bzip2-*/)
          export CPATH=$CPATH:$(ls -d snappy-*/):$(ls -d snappy-*/build/)
          export CPATH=$CPATH:$(ls -d lz4-*/lib/)
          export CPATH=$CPATH:$(ls -d zstd-*/lib/):$(ls -d zstd-*/lib/dictBuilder/)
          make static_lib -j $(nproc)
        env:
          PORTABLE: 1
          EXTRA_CFLAGS: -fPIC -g0
          EXTRA_CXXFLAGS: -fPIC -g0

      - name: Upload built libs
        uses: actions/upload-artifact@v3
        with:
          name: rocksdb_${{ matrix.tag }}
          path: lib*.a

  macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64, arm64]
    env:
      CC: clang
      CXX: clang++
      MACOSX_DEPLOYMENT_TARGET: "10.13"  # min required by RocksDB
    steps:
      - name: Checkout RocksDB
        uses: actions/checkout@v3
        with:
          repository: facebook/rocksdb
          ref: v8.0.0

      - name: Build RocksDB
        run: |
          make rocksdbjavastatic_deps -j $(sysctl -n hw.ncpu)
          rm libz.a libbz2.a
          export CPATH=$CPATH:$(ls -d snappy-*/):$(ls -d snappy-*/build/)
          export CPATH=$CPATH:$(ls -d lz4-*/lib/)
          export CPATH=$CPATH:$(ls -d zstd-*/lib/):$(ls -d zstd-*/lib/dictBuilder/)
          make static_lib -j $(sysctl -n hw.ncpu)
        env:
          ARCHFLAG: -arch ${{ matrix.arch }}
          PORTABLE: 1
          EXTRA_CFLAGS: -fPIC -g0
          EXTRA_CXXFLAGS: -fPIC -g0

      - name: Upload built libs
        uses: actions/upload-artifact@v3
        with:
          name: rocksdb_macos_${{ matrix.arch }}
          path: lib*.a

  windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - tag: win_amd64
            triplet: x64
          - tag: win32
            triplet: x86
          - tag: win_arm64
            triplet: arm64
    steps:
      - name: Build RocksDB from vcpkg
        run: vcpkg install rocksdb[core,bzip2,lz4,snappy,zlib,zstd]:${{ matrix.triplet }}-windows-static-md

      - name: Upload built libs
        uses: actions/upload-artifact@v3
        with:
          name: rocksdb_${{ matrix.tag }}
          path: C:\vcpkg\installed\${{ matrix.triplet }}-windows-static-md

  # publish_wheels:
  #   name: Publish wheels
  #   if: github.event.inputs.make_release == 'true'
  #   needs: build_wheels
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         submodules: recursive
  #     - name: Download artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: wheels
  #         path: wheelhouse
  #     - name: Create release
  #       run: gh release create ${{ github.event.inputs.tag }} ./wheelhouse/*.whl --generate-notes
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
