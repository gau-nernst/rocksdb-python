name: Build RocksDB Windows
on:
  push:
    paths:
     - .github/workflows/build_rocksdb_win.yaml

env:
  CMAKE_FLAGS: -G "Visual Studio 17 2022" -A x64 -DCMAKE_GENERATOR_PLATFORM=x64 -DCMAKE_BUILD_TYPE=Release
  MSBUILD_FLAGS: /m:2 /p:Configuration=Release /p:Platform=x64

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1

      - name: Build Snappy
        run: |
          git clone https://github.com/google/snappy/
          mkdir snappy/build
          cd snappy/build
          cmake ${{ env.CMAKE_FLAGS }} -DSNAPPY_BUILD_TESTS=OFF -DSNAPPY_BUILD_BENCHMARKS=OFF ..
          msbuild Snappy.sln ${{ env.MSBUILD_FLAGS }}
          cp Release/*.lib ../..

      - name: Build LZ4
        run: |
          git clone https://github.com/lz4/lz4
          cd lz4/build
          cmake ${{ env.CMAKE_FLAGS }} -DLZ4_BUILD_CLI=0 -DLZ4_BUILD_LEGACY_LZ4C=0 -DLZ4_BUNDLED_MODE=1 ./cmake
          msbuild LZ4.sln ${{ env.MSBUILD_FLAGS }}
          cp Release/*.lib ../..

      # there are problems with assembly code: https://github.com/madler/zlib/issues/631
      - name: Build ZLib
        run: |
          git clone https://github.com/madler/zlib
          mkdir zlib/build
          cd zlib/build
          cmake ${{ env.CMAKE_FLAGS }} -DAMD64=0 ..
          msbuild zlib.sln ${{ env.MSBUILD_FLAGS }}
          cp Release/*.lib ../..

      - name: Build Zstd
        run: |
          git clone https://github.com/facebook/zstd
          cd zstd/build
          cmake ${{ env.CMAKE_FLAGS }} -DZSTD_LEGACY_SUPPORT=0 -DZSTD_BUILD_PROGRAMS=0 -DZSTD_BUILD_TESTS=0 ./cmake
          msbuild zstd.sln ${{ env.MSBUILD_FLAGS }}
          cp lib/Release/*.lib ../..

      - name: Build rocksdb
        run: |
          mkdir rocksdb/build
          cd rocksdb/build
          cmake ${{ env.CMAKE_FLAGS }} -DWITH_SNAPPY=1 -DWITH_LZ4=1 -DWITH_ZLIB=1 -DWITH_ZSTD=1 -DXPRESS=1 `
            -DPORTABLE=1 -DROCKSDB_BUILD_SHARED=0 -DWITH_BENCHMARK_TOOLS=0 -DWITH_CORE_TOOLS=0 -DWITH_TOOLS=0 ..
          msbuild rocksdb.sln ${{ env.MSBUILD_FLAGS }}
          cp Release/*.lib ../..
        env:
          THIRD_PARTY_HOME: ${{ github.workspace }}

          SNAPPY_HOME: ${{ github.workspace }}/snappy
          SNAPPY_INCLUDE: ${{ github.workspace }}/snappy;${{ github.workspace }}/snappy/build
          SNAPPY_LIB_RELEASE: ${{ github.workspace }}/snappy.lib

          LZ4_HOME: ${{ github.workspace }}/lz4
          LZ4_INCLUDE: ${{ github.workspace }}/lz4/lib
          LZ4_LIB_RELEASE: ${{ github.workspace }}/lz4.lib

          ZLIB_HOME: ${{ github.workspace }}/zlib
          ZLIB_INCLUDE: ${{ github.workspace }}/zlib;${{ github.workspace }}/zlib/build
          ZLIB_LIB_RELEASE: ${{ github.workspace }}/zlib.lib

          ZSTD_HOME: ${{ github.workspace }}/zstd
          ZSTD_INCLUDE: ${{ github.workspace }}/zstd/lib;${{ github.workspace }}/zstd/lib/dictBuilder
          ZSTD_LIB_RELEASE: ${{ github.workspace }}/zstd.lib

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: rocksdb_${{ runner.os }}
          path: "*.lib"
