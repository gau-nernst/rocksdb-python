name: Build RocksDB Windows
on:
  push:
    paths:
     - .github/workflows/build_rocksdb_win.yaml

env:
  CMAKE_FLAGS: -G "Visual Studio 17 2022" -A x64 -DCMAKE_GENERATOR_PLATFORM=x64 -DCMAKE_BUILD_TYPE=Release
  MSBUILD_FLAGS: /m:2 /p:Configuration=Release /p:Platform=x64

jobs:
  build:
    runs-on: windows-latest        
    steps:
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1

      - name: Build Snappy
        run: |
          git clone https://github.com/google/snappy/
          cd snappy
          mkdir build
          cd build
          cmake ${{ env.CMAKE_FLAGS }} -DSNAPPY_BUILD_TESTS=OFF -DSNAPPY_BUILD_BENCHMARKS=OFF ..
          msbuild Snappy.sln ${{ env.MSBUILD_FLAGS }}
          cp Release/*.lib ../..

      - name: Build LZ4
        run: |
          git clone https://github.com/lz4/lz4
          cd lz4/build
          cmake -G "Visual Studio 17 2022" -A x64 -DLZ4_BUILD_CLI=0 -DLZ4_BUILD_LEGACY_LZ4C=0 -DLZ4_BUNDLED_MODE=1 ./cmake
          msbuild LZ4.sln /p:Configuration=Release /p:Platform=x64
          cp Release/*.lib ../..

      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: facebook/rocksdb

      - name: Build rocksdb
        run: |
          mkdir build
          cd build
          cmake ${{ env.CMAKE_FLAGS }} -DPORTABLE=1 -DROCKSDB_BUILD_SHARED=0 -DWITH_BENCHMARK_TOOLS=0 -DWITH_CORE_TOOLS=0 -DWITH_TOOLS=0 ..
          msbuild rocksdb.sln ${{ env.MSBUILD_FLAGS }}
          cp Release/*.lib ..
          ls *.lib

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: rocksdb_${{ runner.os }}
          path: "*.lib"
