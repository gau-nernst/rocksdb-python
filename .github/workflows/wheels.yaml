name: Build wheels
on:
  push:
    paths-ignore:
      - .github/workflows/build_conda.yaml
      - .github/workflows/build_linux.yaml
      - .github/workflows/build_macos_homebrew.yaml
      - .github/workflows/build_windows_vcpkg.yaml
      - README.md
      - .gitignore

jobs:
  macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64, arm64]
    env:
      CC: clang
      CXX: clang++
      MACOSX_DEPLOYMENT_TARGET: "10.13"  # min required by RocksDB
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Checkout RocksDB
        uses: actions/checkout@v3
        with:
          repository: facebook/rocksdb
          ref: v8.0.0
          path: rocksdb

      - name: Compile RocksDB
        run: |
          make -C rocksdb libsnappy.a liblz4.a libzstd.a -j $(sysctl -n hw.ncpu)
          echo "CPATH=$CPATH:$(ls -d rocksdb/snappy-*/):$(ls -d rocksdb/snappy-*/build/)" >> $GITHUB_ENV
          echo "CPATH=$CPATH:$(ls -d rocksdb/lz4-*/lib/)" >> $GITHUB_ENV
          echo "CPATH=$CPATH:$(ls -d rocksdb/zstd-*/lib/):$(ls -d rocksdb/zstd-*/lib/dictBuilder/)" >> $GITHUB_ENV
          make -C rocksdb static_lib -j $(sysctl -n hw.ncpu)
        env:
          DEBUG_LEVEL: 0
          LIB_MODE: static
          ARCHFLAG: -arch ${{ matrix.arch }}
          PORTABLE: 1
          EXTRA_CFLAGS: -fPIC
          EXTRA_CXXFLAGS: -fPIC

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.1
        env:
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BUILD: cp3{7..11}-*
          CIBW_ARCHS_MACOS: ${{ matrix.arch }}

          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: pytest -v {project}/tests

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*.whl

  windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - vcpkg-triplet: x64-windows-static-md
            cibw-arch: AMD64
          - vcpkg-triplet: x86-windows-static-md
            cibw-arch: x86
          - vcpkg-triplet: arm64-windows-static-md
            cibw-arch: ARM64
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Install RocksDB from vcpkg
        run: vcpkg install rocksdb[core,bzip2,lz4,snappy,zlib,zstd]:${{ matrix.vcpkg-triplet }}

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.1
        env:
          CIBW_ENVIRONMENT_WINDOWS: ZLIB_LIB=zlib
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BUILD: cp3{7..11}-*
          CIBW_ARCHS_WINDOWS: ${{ matrix.cibw-arch }}

          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: pytest -v {project}/tests

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*.whl

  # publish_wheels:
  #   name: Publish wheels
  #   if: github.event.inputs.make_release == 'true'
  #   needs: build_wheels
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         submodules: recursive
  #     - name: Download artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: wheels
  #         path: wheelhouse
  #     - name: Create release
  #       run: gh release create ${{ github.event.inputs.tag }} ./wheelhouse/*.whl --generate-notes
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
